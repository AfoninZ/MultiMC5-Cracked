# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the develop branch
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-linux:
    name: build-linux
    runs-on: ubuntu-20.04
    
    
    steps:
      - uses: actions/checkout@v2
      
      - name: Install Dependencies
        run: sudo apt install openjdk-8-jdk libgl1-mesa-dev qt5-default
      - name: Compile
        run: |
          # make all the folders
          mkdir ~/MultiMC && cd ~/MultiMC
          mkdir build
          mkdir install
          # clone the complete source
          git clone --recursive https://github.com/Sebastian-byte/MultiMC5-Cracked.git src
          # configure the project
          cd build
          cmake -DCMAKE_INSTALL_PREFIX=../install ../src
          # build & install
          make -j3 install
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: install
          path: /home/runner/MultiMC/install

  # This workflow contains a single job called "build"
  build-windows: # Actually Fails
    name: build-windows
    # The type of runner that the job will run on
    runs-on: windows-latest
    

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Setup Java JDK
        uses: actions/setup-java@v1.4.3
        with:
          # The Java version to make available on the path. Takes a whole or semver Java version, or 1.x syntax (e.g. 1.8 => Java 8.x). Early access versions can be specified in the form of e.g. 14-ea, 14.0.0-ea, or 14.0.0-ea.28
          java-version: 1.8
        
      # - name: Set up MinGW
      #  uses: egor-tensin/setup-mingw@v2
      #  with:
      #    platform: x64
      
      - name: Install Qt
        uses: jurplel/install-qt-action@v2.12.1
          
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          mkdir src
          git clone --recursive https://github.com/AfoninZ/MultiMC5-Cracked.git src
          powershell -Command "(New-Object Net.WebClient).DownloadFile('https://raw.githubusercontent.com/horta/zlib.install/master/install.bat', 'install.bat')"; ./install.bat
          mkdir install
          cd src
          git submodule init
          git submodule update
          cmake -G "MinGW Makefiles" -DCMAKE_INSTALL_PREFIX="..\\install" -DZLIB_LIBRARY="C:/Program Files/zlib" -DZLIB_INCLUDE_DIR="C:/Program Files/zlib/include"
          mingw32-make.exe -j3
          mingw32-make.exe install
